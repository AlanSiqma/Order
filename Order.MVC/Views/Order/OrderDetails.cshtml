@model Order.MVC.Models.OrderEntity
@{
    ViewData["Title"] = "Detalhes do Pedido";
    decimal total = 0;
}

<h1>Detalhes do Pedido</h1>

<div class="card mb-4">
    <div class="card-header">
        <div class="row">
            <div class="col">
                <h5>Pedido #@Model.OrderId</h5>
            </div>
            <div class="col text-end">
                @if (Model.DateReady.HasValue)
                {
                    <span class="badge bg-success">Pronto</span>
                }
                else
                {
                    <span class="badge bg-warning text-dark">Em Andamento</span>
                }
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row mb-3">
            <div class="col-md-6">
                <h5>Informações do Cliente</h5>
                <p><strong>Nome:</strong> @Model.Name</p>
                <p><strong>Data do Pedido:</strong> @Model.DateOrder.ToString("dd/MM/yyyy HH:mm")</p>
                @if (Model.DateReady.HasValue)
                {
                    <p><strong>Data de Entrega:</strong> @Model.DateReady.Value.ToString("dd/MM/yyyy HH:mm")</p>
                }
            </div>
            <div class="col-md-6">
                <h5>Observações</h5>
                <p>@(string.IsNullOrEmpty(Model.Observation) ? "Sem observações" : Model.Observation)</p>
            </div>
        </div>

        <h5>Itens do Pedido</h5>
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Produto</th>
                        <th>Descrição</th>
                        <th class="text-center">Quantidade</th>
                        <th class="text-end">Preço</th>
                        <th class="text-end">Subtotal</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OrderProducts)
                    {
                        var subtotal = item.Quantity * item.Product.Value;
                        total += subtotal;
                        <tr>
                            <td>@item.Product.Title</td>
                            <td>@item.Product.Description</td>
                            <td class="text-center">@item.Quantity</td>
                            <td class="text-end">@item.Product.Value.ToString("C")</td>
                            <td class="text-end">@subtotal.ToString("C")</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th colspan="4" class="text-end">Total:</th>
                        <th class="text-end">@total.ToString("C")</th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    <div class="card-footer">
        <div class="row">
            <div class="col">
                <a asp-action="TrackOrders" class="btn btn-secondary">Voltar para Pedidos</a>
            </div>
           @*  <div class="col text-end">
                <a asp-action="Edit" asp-route-id="@Model.OrderId" class="btn btn-primary">
                    <i class="bi bi-pencil"></i> Editar Pedido
                </a>
            </div> *@
        </div>
    </div>
</div>
