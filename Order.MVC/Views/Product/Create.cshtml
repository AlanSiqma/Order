@model Order.MVC.Models.ProductEntity

@{
    ViewData["Title"] = "Adicionar Produto";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Adicionar Novo Produto</h1>
</div>

<div class="card">
    <div class="card-body">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="mb-3">
                <label asp-for="Title" class="form-label">Nome do Produto</label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            
            <div class="mb-3">
                <label asp-for="Description" class="form-label">Descrição</label>
                <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Value" class="form-label">Preço</label>
                <div class="input-group">
                    <span class="input-group-text">R$</span>
                    <input asp-for="Value" class="form-control money-input" data-val-number="O campo Preço deve ser um número." />
                </div>
                <span asp-validation-for="Value" class="text-danger"></span>
            </div>
            
            <div class="d-flex justify-content-between">
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Voltar
                </a>
                <button type="submit" class="btn btn-success">
                    <i class="bi bi-check-lg"></i> Salvar
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/currency-input.js"></script>
}
